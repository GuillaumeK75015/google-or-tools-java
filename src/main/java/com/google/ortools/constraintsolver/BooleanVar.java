/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.ortools.constraintsolver;

public class BooleanVar extends IntVar {
  private transient long swigCPtr;

  protected BooleanVar(long cPtr, boolean cMemoryOwn) {
    super(operations_research_constraint_solverJNI.BooleanVar_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BooleanVar obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        operations_research_constraint_solverJNI.delete_BooleanVar(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static int getKUnboundBooleanVarValue() {
    return operations_research_constraint_solverJNI.BooleanVar_kUnboundBooleanVarValue_get();
  }

  public long min() {
    return operations_research_constraint_solverJNI.BooleanVar_min(swigCPtr, this);
  }

  public void setMin(long m) {
    operations_research_constraint_solverJNI.BooleanVar_setMin(swigCPtr, this, m);
  }

  public long max() {
    return operations_research_constraint_solverJNI.BooleanVar_max(swigCPtr, this);
  }

  public void setMax(long m) {
    operations_research_constraint_solverJNI.BooleanVar_setMax(swigCPtr, this, m);
  }

  public void setRange(long mi, long ma) {
    operations_research_constraint_solverJNI.BooleanVar_setRange(swigCPtr, this, mi, ma);
  }

  public boolean bound() {
    return operations_research_constraint_solverJNI.BooleanVar_bound(swigCPtr, this);
  }

  public long value() {
    return operations_research_constraint_solverJNI.BooleanVar_value(swigCPtr, this);
  }

  public void removeValue(long v) {
    operations_research_constraint_solverJNI.BooleanVar_removeValue(swigCPtr, this, v);
  }

  public void removeInterval(long l, long u) {
    operations_research_constraint_solverJNI.BooleanVar_removeInterval(swigCPtr, this, l, u);
  }

  public void WhenBound(Demon d) {
    operations_research_constraint_solverJNI.BooleanVar_WhenBound(swigCPtr, this, Demon.getCPtr(d), d);
  }

  public void WhenRange(Demon d) {
    operations_research_constraint_solverJNI.BooleanVar_WhenRange(swigCPtr, this, Demon.getCPtr(d), d);
  }

  public void WhenDomain(Demon d) {
    operations_research_constraint_solverJNI.BooleanVar_WhenDomain(swigCPtr, this, Demon.getCPtr(d), d);
  }

  public java.math.BigInteger Size() {
    return operations_research_constraint_solverJNI.BooleanVar_Size(swigCPtr, this);
  }

  public boolean contains(long v) {
    return operations_research_constraint_solverJNI.BooleanVar_contains(swigCPtr, this, v);
  }

  public IntVarIterator MakeHoleIterator(boolean reversible) {
    long cPtr = operations_research_constraint_solverJNI.BooleanVar_MakeHoleIterator(swigCPtr, this, reversible);
    return (cPtr == 0) ? null : new IntVarIterator(cPtr, false);
  }

  public IntVarIterator MakeDomainIterator(boolean reversible) {
    long cPtr = operations_research_constraint_solverJNI.BooleanVar_MakeDomainIterator(swigCPtr, this, reversible);
    return (cPtr == 0) ? null : new IntVarIterator(cPtr, false);
  }

  public String toString() {
    return operations_research_constraint_solverJNI.BooleanVar_toString(swigCPtr, this);
  }

  public int VarType() {
    return operations_research_constraint_solverJNI.BooleanVar_VarType(swigCPtr, this);
  }

  public IntVar IsEqual(long constant) {
    long cPtr = operations_research_constraint_solverJNI.BooleanVar_IsEqual(swigCPtr, this, constant);
    return (cPtr == 0) ? null : new IntVar(cPtr, false);
  }

  public IntVar IsDifferent(long constant) {
    long cPtr = operations_research_constraint_solverJNI.BooleanVar_IsDifferent(swigCPtr, this, constant);
    return (cPtr == 0) ? null : new IntVar(cPtr, false);
  }

  public IntVar IsGreaterOrEqual(long constant) {
    long cPtr = operations_research_constraint_solverJNI.BooleanVar_IsGreaterOrEqual(swigCPtr, this, constant);
    return (cPtr == 0) ? null : new IntVar(cPtr, false);
  }

  public IntVar IsLessOrEqual(long constant) {
    long cPtr = operations_research_constraint_solverJNI.BooleanVar_IsLessOrEqual(swigCPtr, this, constant);
    return (cPtr == 0) ? null : new IntVar(cPtr, false);
  }

  public void RestoreValue() {
    operations_research_constraint_solverJNI.BooleanVar_RestoreValue(swigCPtr, this);
  }

  public String BaseName() {
    return operations_research_constraint_solverJNI.BooleanVar_BaseName(swigCPtr, this);
  }

  public int RawValue() {
    return operations_research_constraint_solverJNI.BooleanVar_RawValue(swigCPtr, this);
  }

}

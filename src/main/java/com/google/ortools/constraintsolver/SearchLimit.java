/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.ortools.constraintsolver;

public class SearchLimit extends SearchMonitor {
  private transient long swigCPtr;

  protected SearchLimit(long cPtr, boolean cMemoryOwn) {
    super(operations_research_constraint_solverJNI.SearchLimit_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SearchLimit obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        operations_research_constraint_solverJNI.delete_SearchLimit(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public boolean crossed() {
    return operations_research_constraint_solverJNI.SearchLimit_crossed(swigCPtr, this);
  }

  public boolean Check() {
    return operations_research_constraint_solverJNI.SearchLimit_Check(swigCPtr, this);
  }

  public void Init() {
    operations_research_constraint_solverJNI.SearchLimit_Init(swigCPtr, this);
  }

  public void Copy(SearchLimit limit) {
    operations_research_constraint_solverJNI.SearchLimit_Copy(swigCPtr, this, SearchLimit.getCPtr(limit), limit);
  }

  public SearchLimit MakeClone() {
    long cPtr = operations_research_constraint_solverJNI.SearchLimit_MakeClone(swigCPtr, this);
    return (cPtr == 0) ? null : new SearchLimit(cPtr, false);
  }

  public void enterSearch() {
    operations_research_constraint_solverJNI.SearchLimit_enterSearch(swigCPtr, this);
  }

  public void beginNextDecision(DecisionBuilder b) {
    operations_research_constraint_solverJNI.SearchLimit_beginNextDecision(swigCPtr, this, DecisionBuilder.getCPtr(b), b);
  }

  public void periodicCheck() {
    operations_research_constraint_solverJNI.SearchLimit_periodicCheck(swigCPtr, this);
  }

  public void refuteDecision(Decision d) {
    operations_research_constraint_solverJNI.SearchLimit_refuteDecision(swigCPtr, this, Decision.getCPtr(d), d);
  }

  public String toString() {
    return operations_research_constraint_solverJNI.SearchLimit_toString(swigCPtr, this);
  }

}

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.ortools.constraintsolver;

public class operations_research_constraint_solver implements operations_research_constraint_solverConstants {
  public static long Zero() {
    return operations_research_constraint_solverJNI.Zero();
  }

  public static void SetAssignmentFromAssignment(Assignment target_assignment, IntVar[] target_vars, Assignment source_assignment, IntVar[] source_vars) {
    operations_research_constraint_solverJNI.SetAssignmentFromAssignment(Assignment.getCPtr(target_assignment), target_assignment, target_vars, Assignment.getCPtr(source_assignment), source_assignment, source_vars);
  }

  public static boolean AreAllBound(IntVar[] vars) {
    return operations_research_constraint_solverJNI.AreAllBound(vars);
  }

  public static boolean AreAllBooleans(IntVar[] vars) {
    return operations_research_constraint_solverJNI.AreAllBooleans(vars);
  }

  public static boolean AreAllBoundTo(IntVar[] vars, long value) {
    return operations_research_constraint_solverJNI.AreAllBoundTo(vars, value);
  }

  public static long MaxVarArray(IntVar[] vars) {
    return operations_research_constraint_solverJNI.MaxVarArray(vars);
  }

  public static long MinVarArray(IntVar[] vars) {
    return operations_research_constraint_solverJNI.MinVarArray(vars);
  }

  public static void FillValues(IntVar[] vars, SWIGTYPE_p_std__vectorT_long_long_t values) {
    operations_research_constraint_solverJNI.FillValues(vars, SWIGTYPE_p_std__vectorT_long_long_t.getCPtr(values));
  }

  public static long PosIntDivUp(long e, long v) {
    return operations_research_constraint_solverJNI.PosIntDivUp(e, v);
  }

  public static long PosIntDivDown(long e, long v) {
    return operations_research_constraint_solverJNI.PosIntDivDown(e, v);
  }

}
